import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';

export default async function handler(req, res) {
    try {
        console.log("üîπ API /api/users –∑–∞–ø—É—â–µ–Ω");

        if (!process.env.GOOGLE_CLIENT_EMAIL || !process.env.GOOGLE_PRIVATE_KEY || !process.env.GOOGLE_SHEET_ID) {
            throw new Error("üî¥ –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
        }

        const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEET_ID);
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets...");

        const auth = new JWT({
            email: process.env.GOOGLE_CLIENT_EMAIL,
            key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\n/g, '\n'),
            scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],
        });

        await doc.useServiceAccountAuth(auth);
        await doc.loadInfo();
        console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Ç–∞–±–ª–∏—Ü–µ:", doc.title);

        const sheet = doc.sheetsByIndex[0]; 
        const rows = await sheet.getRows();

        let users = {};
        rows.forEach(row => {
            users[row['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'].replace(/\D/g, '')] = row['–ü–∞—Ä–æ–ª—å'];
        });

        console.log("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", Object.keys(users).length);
        res.status(200).json(users);
    } catch (error) {
        console.error("üî¥ –û—à–∏–±–∫–∞ –≤ API /api/users:", error);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', details: error.message });
    }
}
